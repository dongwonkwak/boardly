version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:16-alpine
    container_name: boardly-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: boardly-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./backend/src/main/resources/data-postgresql.sql:/docker-entrypoint-initdb.d/02-data.sql:ro
    ports:
      - "5432:5432"
    networks:
      - boardly-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U boardly -d boardly"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend 애플리케이션
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boardly-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/boardly
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: false
      APP_FRONTEND_URL: http://localhost:5173
      APP_CORS_ALLOWED_ORIGINS: http://localhost:5173
      JAVA_OPTS: "-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+UseContainerSupport"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - boardly-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend 애플리케이션
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: boardly-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - boardly-network
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
      - VITE_APP_ENV=production

  # 개발용 Frontend (선택사항)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: boardly-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
      - VITE_APP_ENV=development
    depends_on:
      - backend
    networks:
      - boardly-network
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local

networks:
  boardly-network:
    driver: bridge 