-- =====================================================
-- Boardly Database Schema - 테이블 생성 SQL
-- =====================================================

-- 1. 사용자 테이블
CREATE TABLE IF NOT EXISTS users (
    user_id VARCHAR(50) NOT NULL PRIMARY KEY,
    email VARCHAR(100) NOT NULL UNIQUE,
    hashed_password VARCHAR(255) NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL,
    version BIGINT NOT NULL DEFAULT 0
);

-- 2. 보드 테이블
CREATE TABLE IF NOT EXISTS boards (
    board_id VARCHAR(50) NOT NULL PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    is_archived BOOLEAN NOT NULL DEFAULT FALSE,
    owner_id VARCHAR(50) NOT NULL,
    is_starred BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL,
    version BIGINT NOT NULL DEFAULT 0,
    FOREIGN KEY (owner_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- 3. 보드 멤버 테이블
CREATE TABLE IF NOT EXISTS board_members (
    member_id VARCHAR(50) NOT NULL PRIMARY KEY,
    board_id VARCHAR(50) NOT NULL,
    user_id VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL,
    version BIGINT NOT NULL DEFAULT 0,
    FOREIGN KEY (board_id) REFERENCES boards(board_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    UNIQUE (board_id, user_id)
);

-- 4. 보드 리스트 테이블
CREATE TABLE IF NOT EXISTS board_lists (
    list_id VARCHAR(50) NOT NULL PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    position INTEGER NOT NULL,
    color VARCHAR(7) NOT NULL,
    board_id VARCHAR(50) NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL,
    version BIGINT NOT NULL DEFAULT 0,
    FOREIGN KEY (board_id) REFERENCES boards(board_id) ON DELETE CASCADE
);

-- 5. 카드 테이블
CREATE TABLE IF NOT EXISTS cards (
    card_id VARCHAR(50) NOT NULL PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    description TEXT,
    position INTEGER NOT NULL,
    due_date TIMESTAMP,
    start_date TIMESTAMP,
    archived BOOLEAN NOT NULL DEFAULT FALSE,
    priority VARCHAR(20) NOT NULL DEFAULT 'medium',
    is_completed BOOLEAN NOT NULL DEFAULT FALSE,
    list_id VARCHAR(50) NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL,
    version BIGINT NOT NULL DEFAULT 0,
    FOREIGN KEY (list_id) REFERENCES board_lists(list_id) ON DELETE CASCADE
);

-- 6. 카드 멤버 테이블 (카드 담당자)
CREATE TABLE IF NOT EXISTS card_members (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    card_id VARCHAR(50) NOT NULL,
    user_id VARCHAR(50) NOT NULL,
    assigned_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (card_id) REFERENCES cards(card_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    UNIQUE (card_id, user_id)
);

-- 7. 라벨 테이블
CREATE TABLE IF NOT EXISTS labels (
    label_id VARCHAR(50) NOT NULL PRIMARY KEY,
    board_id VARCHAR(50) NOT NULL,
    name VARCHAR(50) NOT NULL,
    color VARCHAR(7) NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL,
    version BIGINT NOT NULL DEFAULT 0,
    FOREIGN KEY (board_id) REFERENCES boards(board_id) ON DELETE CASCADE,
    UNIQUE (board_id, name)
);

-- 8. 카드 라벨 연결 테이블
CREATE TABLE IF NOT EXISTS card_labels (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    card_id VARCHAR(50) NOT NULL,
    label_id VARCHAR(50) NOT NULL,
    applied_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (card_id) REFERENCES cards(card_id) ON DELETE CASCADE,
    FOREIGN KEY (label_id) REFERENCES labels(label_id) ON DELETE CASCADE,
    UNIQUE (card_id, label_id)
);

-- 9. 댓글 테이블
CREATE TABLE IF NOT EXISTS comments (
    comment_id VARCHAR(50) NOT NULL PRIMARY KEY,
    card_id VARCHAR(50) NOT NULL,
    author_id VARCHAR(50) NOT NULL,
    content VARCHAR(1000) NOT NULL,
    edited BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL,
    version BIGINT NOT NULL DEFAULT 0,
    FOREIGN KEY (card_id) REFERENCES cards(card_id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- 10. 첨부파일 테이블
CREATE TABLE IF NOT EXISTS attachments (
    attachment_id VARCHAR(50) NOT NULL PRIMARY KEY,
    card_id VARCHAR(50) NOT NULL,
    uploader_id VARCHAR(50) NOT NULL,
    file_name VARCHAR(255) NOT NULL,
    original_name VARCHAR(255) NOT NULL,
    file_url VARCHAR(500) NOT NULL,
    mime_type VARCHAR(100) NOT NULL,
    file_size BIGINT NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL,
    version BIGINT NOT NULL DEFAULT 0,
    FOREIGN KEY (card_id) REFERENCES cards(card_id) ON DELETE CASCADE,
    FOREIGN KEY (uploader_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- 11. 사용자 활동 테이블
CREATE TABLE IF NOT EXISTS user_activity (
    activity_id VARCHAR(50) NOT NULL PRIMARY KEY,
    actor_id VARCHAR(50) NOT NULL,
    board_id VARCHAR(50),
    list_id VARCHAR(50),
    card_id VARCHAR(50),
    activity_type VARCHAR(50) NOT NULL,
    actor_first_name VARCHAR(50) NOT NULL,
    actor_last_name VARCHAR(50) NOT NULL,
    actor_profile_image_url VARCHAR(500),
    payload TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL,
    FOREIGN KEY (actor_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (board_id) REFERENCES boards(board_id) ON DELETE CASCADE,
    FOREIGN KEY (list_id) REFERENCES board_lists(list_id) ON DELETE CASCADE,
    FOREIGN KEY (card_id) REFERENCES cards(card_id) ON DELETE CASCADE
);

-- =====================================================
-- 인덱스 생성
-- =====================================================

-- 보드 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_boards_owner_id ON boards(owner_id);
CREATE INDEX IF NOT EXISTS idx_boards_archived ON boards(is_archived);
CREATE INDEX IF NOT EXISTS idx_boards_starred ON boards(is_starred);

-- 보드 멤버 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_board_members_board_id ON board_members(board_id);
CREATE INDEX IF NOT EXISTS idx_board_members_user_id ON board_members(user_id);
CREATE INDEX IF NOT EXISTS idx_board_members_active ON board_members(is_active);

-- 보드 리스트 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_board_lists_board_id ON board_lists(board_id);
CREATE INDEX IF NOT EXISTS idx_board_lists_position ON board_lists(board_id, position);

-- 카드 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_cards_list_id ON cards(list_id);
CREATE INDEX IF NOT EXISTS idx_cards_position ON cards(list_id, position);
CREATE INDEX IF NOT EXISTS idx_cards_due_date ON cards(due_date);
CREATE INDEX IF NOT EXISTS idx_cards_start_date ON cards(start_date);
CREATE INDEX IF NOT EXISTS idx_cards_archived ON cards(archived);
CREATE INDEX IF NOT EXISTS idx_cards_priority ON cards(priority);
CREATE INDEX IF NOT EXISTS idx_cards_completed ON cards(is_completed);

-- 카드 멤버 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_card_members_card_id ON card_members(card_id);
CREATE INDEX IF NOT EXISTS idx_card_members_user_id ON card_members(user_id);

-- 라벨 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_labels_board_id ON labels(board_id);
CREATE INDEX IF NOT EXISTS idx_labels_name ON labels(board_id, name);

-- 카드 라벨 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_card_labels_card_id ON card_labels(card_id);
CREATE INDEX IF NOT EXISTS idx_card_labels_label_id ON card_labels(label_id);

-- 댓글 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_comments_card_id ON comments(card_id);
CREATE INDEX IF NOT EXISTS idx_comments_author_id ON comments(author_id);
CREATE INDEX IF NOT EXISTS idx_comments_created_at ON comments(created_at);

-- 첨부파일 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_attachments_card_id ON attachments(card_id);
CREATE INDEX IF NOT EXISTS idx_attachments_uploader_id ON attachments(uploader_id);
CREATE INDEX IF NOT EXISTS idx_attachments_created_at ON attachments(created_at);

-- 사용자 활동 관련 인덱스
CREATE INDEX IF NOT EXISTS idx_activity_board_id ON user_activity(board_id);
CREATE INDEX IF NOT EXISTS idx_activity_actor_id ON user_activity(actor_id);
CREATE INDEX IF NOT EXISTS idx_activity_created_at ON user_activity(created_at);
CREATE INDEX IF NOT EXISTS idx_activity_board_timestamp ON user_activity(board_id, created_at);
CREATE INDEX IF NOT EXISTS idx_activity_type ON user_activity(activity_type);